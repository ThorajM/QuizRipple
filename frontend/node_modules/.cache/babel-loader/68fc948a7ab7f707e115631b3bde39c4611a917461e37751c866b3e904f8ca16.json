{"ast":null,"code":"var _jsxFileName = \"/Users/thoraj/Desktop/QUIZZZZZZ/frontend/src/components/QuizDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/QuizDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizDisplay = () => {\n  _s();\n  var _currentQuestion$opti;\n  // Navigation hook\n  const navigate = useNavigate();\n\n  // Core quiz data state\n  const [quizData, setQuizData] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [reviewFlags, setReviewFlags] = useState({});\n  const [visitedQuestions, setVisitedQuestions] = useState(new Set());\n  const [timeSpentPerQuestion, setTimeSpentPerQuestion] = useState({});\n\n  // Timer and session state\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n\n  // UI and system state\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [submissionReason, setSubmissionReason] = useState('completed');\n\n  // Modal and fullscreen state\n  const [showSubmissionModal, setShowSubmissionModal] = useState(false);\n  const [showFullscreenModal, setShowFullscreenModal] = useState(false);\n  const [fullscreenRetryCount, setFullscreenRetryCount] = useState(0);\n  const [isFullscreenSupported, setIsFullscreenSupported] = useState(true);\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\n\n  // User state\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Refs for cleanup and management\n  const timerRef = useRef(null);\n  const autoSaveRef = useRef(null);\n  const fullscreenCheckRef = useRef(null);\n  const visibilityRef = useRef(null);\n\n  // **ENHANCED: Cross-platform fullscreen support**\n  const isFullscreenSupported_ = useCallback(() => {\n    return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled || Element.prototype.requestFullscreen || Element.prototype.webkitRequestFullscreen || Element.prototype.mozRequestFullScreen || Element.prototype.msRequestFullscreen);\n  }, []);\n\n  // **IMPROVED: More reliable fullscreen detection for all OS**\n  const isInFullscreen = useCallback(() => {\n    const hasFullscreenElement = !!(document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement);\n\n    // Additional checks for Windows and other OS\n    const isFullscreenMode = hasFullscreenElement || window.innerHeight === window.screen.height || window.outerHeight === window.screen.height || window.innerWidth === window.screen.width && window.innerHeight === window.screen.height || !window.screenTop && !window.screenY || navigator.userAgent.includes('Windows') && window.screen && Math.abs(window.innerHeight - window.screen.height) <= 1 || document.documentElement.clientHeight === window.screen.height;\n    return isFullscreenMode;\n  }, []);\n\n  // **ENHANCED: Comprehensive tab and window switching detection**\n  const startComprehensiveMonitoring = useCallback(() => {\n    // Clear existing intervals\n    if (fullscreenCheckRef.current) {\n      clearInterval(fullscreenCheckRef.current);\n    }\n    if (visibilityRef.current) {\n      clearInterval(visibilityRef.current);\n    }\n\n    // Fullscreen monitoring - every 300ms for better responsiveness\n    fullscreenCheckRef.current = setInterval(() => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        if (!isInFullscreen()) {\n          console.warn('Fullscreen exited - showing warning modal');\n          setShowFullscreenModal(true);\n        }\n      }\n    }, 300);\n\n    // Additional visibility monitoring for tab switches\n    visibilityRef.current = setInterval(() => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal && document.hidden) {\n        setTabSwitchCount(prev => prev + 1);\n        console.warn('Tab switch detected via interval check');\n        if (!showFullscreenModal) {\n          setShowFullscreenModal(true);\n        }\n      }\n    }, 200);\n  }, [isActive, isQuizCompleted, showSubmissionModal, isInFullscreen]);\n  const stopComprehensiveMonitoring = useCallback(() => {\n    if (fullscreenCheckRef.current) {\n      clearInterval(fullscreenCheckRef.current);\n      fullscreenCheckRef.current = null;\n    }\n    if (visibilityRef.current) {\n      clearInterval(visibilityRef.current);\n      visibilityRef.current = null;\n    }\n  }, []);\n\n  // **IMPROVED: Enhanced fullscreen entry with better Windows support**\n  const enterFullScreen = useCallback(async () => {\n    try {\n      if (!isFullscreenSupported_()) {\n        console.warn('Fullscreen is not supported in this browser');\n        setIsFullscreenSupported(false);\n        return false;\n      }\n      const elem = document.documentElement;\n\n      // Enhanced fullscreen request with more options for Windows\n      const fullscreenOptions = {\n        navigationUI: \"hide\"\n      };\n      let fullscreenPromise = null;\n      if (elem.requestFullscreen) {\n        fullscreenPromise = elem.requestFullscreen(fullscreenOptions);\n      } else if (elem.mozRequestFullScreen) {\n        fullscreenPromise = elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        // Enhanced for Safari and Chrome on different OS\n        fullscreenPromise = elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else if (elem.msRequestFullscreen) {\n        fullscreenPromise = elem.msRequestFullscreen();\n      } else {\n        throw new Error('No fullscreen method available');\n      }\n      if (fullscreenPromise) {\n        await fullscreenPromise;\n      }\n\n      // Additional verification for Windows\n      setTimeout(() => {\n        if (!isInFullscreen()) {\n          console.warn('Fullscreen may not have activated properly');\n          setFullscreenRetryCount(prev => prev + 1);\n          if (fullscreenRetryCount < 2) {\n            setTimeout(() => enterFullScreen(), 500);\n          }\n        } else {\n          console.log('Fullscreen activated successfully');\n          setShowFullscreenModal(false);\n          setFullscreenRetryCount(0);\n          startComprehensiveMonitoring();\n        }\n      }, 100);\n      return true;\n    } catch (error) {\n      console.warn('Could not enter fullscreen mode:', error.message);\n      setFullscreenRetryCount(prev => prev + 1);\n      if (fullscreenRetryCount >= 3) {\n        const isWindows = navigator.userAgent.includes('Windows');\n        const message = isWindows ? 'Fullscreen mode is required. Please press F11 or allow fullscreen permissions and try again.' : 'Fullscreen mode is required. Please allow fullscreen permissions and try again.';\n        alert(message);\n      }\n      return false;\n    }\n  }, [isFullscreenSupported_, fullscreenRetryCount, startComprehensiveMonitoring, isInFullscreen]);\n\n  // **IMPROVED: Better exit fullscreen with cross-platform support**\n  const exitFullScreen = useCallback(async () => {\n    try {\n      if (document.exitFullscreen) {\n        await document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        await document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        await document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        await document.msExitFullscreen();\n      }\n      console.log('Fullscreen exited successfully');\n      stopComprehensiveMonitoring();\n    } catch (error) {\n      console.warn('Could not exit fullscreen mode:', error.message);\n    }\n  }, [stopComprehensiveMonitoring]);\n\n  // **ENHANCED: Comprehensive event listeners for better tab/window switching detection**\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      const isCurrentlyFullscreen = isInFullscreen();\n      console.log('Fullscreen change detected:', isCurrentlyFullscreen);\n      if (isActive && !isQuizCompleted && !showSubmissionModal && !isCurrentlyFullscreen) {\n        setShowFullscreenModal(true);\n      }\n    };\n    const handleVisibilityChange = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        if (document.hidden) {\n          setTabSwitchCount(prev => prev + 1);\n          console.warn('Tab hidden - possible switch detected');\n          setShowFullscreenModal(true);\n        } else if (!isInFullscreen()) {\n          console.warn('Tab visible but not fullscreen');\n          setShowFullscreenModal(true);\n        }\n      }\n    };\n    const handleWindowBlur = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        setTabSwitchCount(prev => prev + 1);\n        console.warn('Window blur - switch detected');\n        setShowFullscreenModal(true);\n      }\n    };\n    const handleWindowFocus = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal && !isInFullscreen()) {\n        console.warn('Window focused but not fullscreen');\n        setTimeout(() => {\n          if (!isInFullscreen()) {\n            setShowFullscreenModal(true);\n          }\n        }, 100);\n      }\n    };\n    const handleResize = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        setTimeout(() => {\n          if (!isInFullscreen()) {\n            setShowFullscreenModal(true);\n          }\n        }, 150);\n      }\n    };\n    const handleKeydown = e => {\n      if (isActive && !isQuizCompleted) {\n        // Prevent F11 and other fullscreen exit keys\n        if (e.key === 'F11' || e.keyCode === 122) {\n          e.preventDefault();\n          if (!isInFullscreen()) {\n            setShowFullscreenModal(true);\n          }\n        }\n        // Prevent Alt+Tab (Windows), Cmd+Tab (Mac)\n        if (e.altKey && e.key === 'Tab' || e.metaKey && e.key === 'Tab') {\n          e.preventDefault();\n          setTabSwitchCount(prev => prev + 1);\n          setShowFullscreenModal(true);\n        }\n        // Prevent Alt+F4, Ctrl+W, Ctrl+T, etc.\n        if (e.altKey && e.key === 'F4') e.preventDefault();\n        if (e.ctrlKey && (e.key === 'w' || e.key === 't' || e.key === 'n')) e.preventDefault();\n        if (e.ctrlKey && e.shiftKey && e.key === 'I') e.preventDefault();\n        if (e.key === 'F12' || e.keyCode === 123) e.preventDefault();\n      }\n    };\n    const handleContextMenu = e => {\n      if (isActive && !isQuizCompleted) {\n        e.preventDefault();\n      }\n    };\n\n    // Page Visibility API events\n    const handleBeforeUnload = e => {\n      if (isActive && !isQuizCompleted) {\n        e.preventDefault();\n        e.returnValue = 'Quiz in progress';\n        return e.returnValue;\n      }\n    };\n\n    // Add all event listeners\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\n    document.addEventListener('mozfullscreenchange', handleFullscreenChange);\n    document.addEventListener('MSFullscreenChange', handleFullscreenChange);\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('blur', handleWindowBlur);\n    window.addEventListener('focus', handleWindowFocus);\n    window.addEventListener('resize', handleResize);\n    document.addEventListener('keydown', handleKeydown);\n    document.addEventListener('contextmenu', handleContextMenu);\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n      document.removeEventListener('webkitfullscreenchange', handleFullscreenChange);\n      document.removeEventListener('mozfullscreenchange', handleFullscreenChange);\n      document.removeEventListener('MSFullscreenChange', handleFullscreenChange);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('blur', handleWindowBlur);\n      window.removeEventListener('focus', handleWindowFocus);\n      window.removeEventListener('resize', handleResize);\n      document.removeEventListener('keydown', handleKeydown);\n      document.removeEventListener('contextmenu', handleContextMenu);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isActive, isQuizCompleted, showSubmissionModal, isInFullscreen]);\n\n  // Check fullscreen on page load/refresh\n  useEffect(() => {\n    const checkFullscreenOnLoad = () => {\n      const savedProgress = localStorage.getItem('quiz-progress');\n      if (savedProgress) {\n        try {\n          const data = JSON.parse(savedProgress);\n          if (data.isActive && !isInFullscreen()) {\n            setTimeout(() => {\n              setShowFullscreenModal(true);\n            }, 1000);\n          }\n        } catch (error) {\n          console.error('Error checking saved progress:', error);\n        }\n      }\n    };\n    if (isAuthenticated && user) {\n      checkFullscreenOnLoad();\n    }\n  }, [isAuthenticated, user, isInFullscreen]);\n\n  // Format time utility\n  const formatTime = useCallback(seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Grade utility function\n  const getGrade = useCallback(percentage => {\n    if (percentage >= 90) return 'A+';\n    if (percentage >= 85) return 'A';\n    if (percentage >= 80) return 'B+';\n    if (percentage >= 75) return 'B';\n    if (percentage >= 70) return 'C+';\n    if (percentage >= 65) return 'C';\n    if (percentage >= 60) return 'D';\n    return 'F';\n  }, []);\n\n  // Enhanced results calculation\n  const calculateResults = useCallback(() => {\n    var _quizData$config;\n    if (!questions.length || !quizData) return null;\n    let correctAnswers = 0;\n    let totalScore = 0;\n    let maxScore = 0;\n    questions.forEach(question => {\n      var _quizData$difficultie;\n      const difficulty = (_quizData$difficultie = quizData.difficulties) === null || _quizData$difficultie === void 0 ? void 0 : _quizData$difficultie.find(d => d.id === question.difficulty);\n      const points = (difficulty === null || difficulty === void 0 ? void 0 : difficulty.points) || 1;\n      maxScore += points;\n      const userAnswer = selectedAnswers[question.id];\n      const correctOption = question.options.find(opt => opt.correct);\n      if (userAnswer === (correctOption === null || correctOption === void 0 ? void 0 : correctOption.id)) {\n        correctAnswers++;\n        totalScore += points;\n      }\n    });\n    const percentage = maxScore > 0 ? Math.round(totalScore / maxScore * 100) : 0;\n    const passed = percentage >= (((_quizData$config = quizData.config) === null || _quizData$config === void 0 ? void 0 : _quizData$config.passingScore) || 70);\n    return {\n      correctAnswers,\n      totalQuestions: questions.length,\n      answeredQuestions: Object.keys(selectedAnswers).length,\n      skippedQuestions: questions.length - Object.keys(selectedAnswers).length,\n      totalScore,\n      maxScore,\n      percentage,\n      passed,\n      grade: getGrade(percentage)\n    };\n  }, [questions, quizData, selectedAnswers, getGrade]);\n\n  // Calculate comprehensive quiz analytics\n  const calculateQuizAnalytics = useCallback(() => {\n    const answeredCount = Object.keys(selectedAnswers).length;\n    const skippedCount = questions.length - answeredCount;\n    const reviewedCount = Object.values(reviewFlags).filter(flag => flag).length;\n    const visitedCount = visitedQuestions.size;\n    const difficultyStats = {};\n    if (quizData !== null && quizData !== void 0 && quizData.difficulties) {\n      quizData.difficulties.forEach(diff => {\n        const questionsOfDifficulty = questions.filter(q => q.difficulty === diff.id);\n        const correctOfDifficulty = questionsOfDifficulty.filter(q => {\n          const userAnswer = selectedAnswers[q.id];\n          const correctOption = q.options.find(opt => opt.correct);\n          return userAnswer === (correctOption === null || correctOption === void 0 ? void 0 : correctOption.id);\n        });\n        difficultyStats[diff.name] = {\n          total: questionsOfDifficulty.length,\n          attempted: questionsOfDifficulty.filter(q => selectedAnswers[q.id]).length,\n          correct: correctOfDifficulty.length,\n          percentage: questionsOfDifficulty.length > 0 ? Math.round(correctOfDifficulty.length / questionsOfDifficulty.length * 100) : 0\n        };\n      });\n    }\n    const categoryStats = {};\n    const categories = [...new Set(questions.map(q => q.category).filter(Boolean))];\n    categories.forEach(category => {\n      const questionsOfCategory = questions.filter(q => q.category === category);\n      const correctOfCategory = questionsOfCategory.filter(q => {\n        const userAnswer = selectedAnswers[q.id];\n        const correctOption = q.options.find(opt => opt.correct);\n        return userAnswer === (correctOption === null || correctOption === void 0 ? void 0 : correctOption.id);\n      });\n      categoryStats[category] = {\n        total: questionsOfCategory.length,\n        attempted: questionsOfCategory.filter(q => selectedAnswers[q.id]).length,\n        correct: correctOfCategory.length,\n        percentage: questionsOfCategory.length > 0 ? Math.round(correctOfCategory.length / questionsOfCategory.length * 100) : 0\n      };\n    });\n    return {\n      summary: {\n        totalQuestions: questions.length,\n        answeredQuestions: answeredCount,\n        skippedQuestions: skippedCount,\n        reviewedQuestions: reviewedCount,\n        visitedQuestions: visitedCount,\n        completionRate: Math.round(answeredCount / questions.length * 100),\n        reviewRate: Math.round(reviewedCount / questions.length * 100),\n        tabSwitchCount\n      },\n      difficultyBreakdown: difficultyStats,\n      categoryBreakdown: categoryStats,\n      timeAnalysis: {\n        totalQuestions: questions.length,\n        questionsWithTimeData: Object.keys(timeSpentPerQuestion).length,\n        averageTimePerQuestion: Object.keys(timeSpentPerQuestion).length > 0 ? Math.round(Object.values(timeSpentPerQuestion).reduce((a, b) => a + b, 0) / Object.keys(timeSpentPerQuestion).length) : 0,\n        fastestQuestion: Object.keys(timeSpentPerQuestion).length > 0 ? Math.min(...Object.values(timeSpentPerQuestion)) : 0,\n        slowestQuestion: Object.keys(timeSpentPerQuestion).length > 0 ? Math.max(...Object.values(timeSpentPerQuestion)) : 0\n      }\n    };\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, quizData, tabSwitchCount]);\n\n  // Generate detailed question results\n  const generateQuestionResults = useCallback(() => {\n    return questions.map((question, index) => {\n      var _question$options$fin, _quizData$difficultie2, _quizData$difficultie3;\n      const userAnswer = selectedAnswers[question.id];\n      const correctOption = question.options.find(opt => opt.correct);\n      const isCorrect = userAnswer === (correctOption === null || correctOption === void 0 ? void 0 : correctOption.id);\n      const wasReviewed = reviewFlags[question.id] || false;\n      const wasVisited = visitedQuestions.has(index);\n      const timeSpent = timeSpentPerQuestion[question.id] || 0;\n      return {\n        questionNumber: index + 1,\n        questionId: question.id,\n        questionText: question.text,\n        difficulty: question.difficulty,\n        category: question.category,\n        userAnswerId: userAnswer,\n        userAnswerText: userAnswer ? (_question$options$fin = question.options.find(opt => opt.id === userAnswer)) === null || _question$options$fin === void 0 ? void 0 : _question$options$fin.text : null,\n        correctAnswerId: correctOption === null || correctOption === void 0 ? void 0 : correctOption.id,\n        correctAnswerText: correctOption === null || correctOption === void 0 ? void 0 : correctOption.text,\n        isCorrect,\n        isAnswered: !!userAnswer,\n        wasReviewed,\n        wasVisited,\n        timeSpent,\n        status: !userAnswer ? 'skipped' : isCorrect ? 'correct' : 'incorrect',\n        points: isCorrect ? (quizData === null || quizData === void 0 ? void 0 : (_quizData$difficultie2 = quizData.difficulties) === null || _quizData$difficultie2 === void 0 ? void 0 : (_quizData$difficultie3 = _quizData$difficultie2.find(d => d.id === question.difficulty)) === null || _quizData$difficultie3 === void 0 ? void 0 : _quizData$difficultie3.points) || 1 : 0\n      };\n    });\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, quizData]);\n  const handleSubmitQuiz = useCallback(async () => {\n    var _quizData$config2, _quizData$config3, _quizData$config4, _quizData$config5, _quizData$config6, _quizData$config7;\n    if (isQuizCompleted) return;\n    setIsActive(false);\n    setIsQuizCompleted(true);\n    setShowSubmissionModal(false);\n    stopComprehensiveMonitoring();\n    await exitFullScreen();\n    const results = calculateResults();\n    const submissionTime = Date.now();\n    const totalTimeSpent = startTime ? submissionTime - startTime : 0;\n    const quizAnalytics = calculateQuizAnalytics();\n    const resultsData = {\n      ...results,\n      student: {\n        name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.firstName) || 'Unknown',\n        email: (user === null || user === void 0 ? void 0 : user.email) || 'unknown@email.com',\n        id: (user === null || user === void 0 ? void 0 : user.id) || (user === null || user === void 0 ? void 0 : user.userId) || 'unknown'\n      },\n      quizConfig: {\n        title: (quizData === null || quizData === void 0 ? void 0 : (_quizData$config2 = quizData.config) === null || _quizData$config2 === void 0 ? void 0 : _quizData$config2.title) || 'Quiz',\n        description: (quizData === null || quizData === void 0 ? void 0 : (_quizData$config3 = quizData.config) === null || _quizData$config3 === void 0 ? void 0 : _quizData$config3.description) || '',\n        timeLimit: (quizData === null || quizData === void 0 ? void 0 : (_quizData$config4 = quizData.config) === null || _quizData$config4 === void 0 ? void 0 : _quizData$config4.timeLimit) || 1800,\n        passingScore: (quizData === null || quizData === void 0 ? void 0 : (_quizData$config5 = quizData.config) === null || _quizData$config5 === void 0 ? void 0 : _quizData$config5.passingScore) || 70,\n        totalQuestions: questions.length,\n        shuffleQuestions: (quizData === null || quizData === void 0 ? void 0 : (_quizData$config6 = quizData.config) === null || _quizData$config6 === void 0 ? void 0 : _quizData$config6.shuffleQuestions) || false,\n        shuffleOptions: (quizData === null || quizData === void 0 ? void 0 : (_quizData$config7 = quizData.config) === null || _quizData$config7 === void 0 ? void 0 : _quizData$config7.shuffleOptions) || false\n      },\n      timing: {\n        startTime: new Date(startTime).toISOString(),\n        submitTime: new Date(submissionTime).toISOString(),\n        totalTimeSpent: totalTimeSpent,\n        totalTimeSpentFormatted: formatTime(Math.floor(totalTimeSpent / 1000)),\n        timeSpentPerQuestion: timeSpentPerQuestion,\n        averageTimePerQuestion: Math.floor(totalTimeSpent / questions.length / 1000)\n      },\n      analytics: quizAnalytics,\n      submission: {\n        reason: submissionReason,\n        timestamp: new Date(submissionTime).toISOString(),\n        userAgent: navigator.userAgent,\n        completionRate: Math.round(Object.keys(selectedAnswers).length / questions.length * 100),\n        tabSwitchViolations: tabSwitchCount\n      },\n      questionResults: generateQuestionResults(),\n      rawData: {\n        selectedAnswers,\n        reviewFlags,\n        visitedQuestions: Array.from(visitedQuestions),\n        questions: questions.map(q => ({\n          id: q.id,\n          text: q.text,\n          difficulty: q.difficulty,\n          category: q.category,\n          options: q.options.map(opt => ({\n            id: opt.id,\n            text: opt.text,\n            correct: opt.correct\n          }))\n        }))\n      }\n    };\n    try {\n      localStorage.setItem('quiz-results', JSON.stringify(resultsData));\n    } catch (error) {\n      console.error('Failed to save results:', error);\n    }\n    localStorage.removeItem('quiz-progress');\n    setTimeout(() => {\n      navigate('/results', {\n        state: {\n          results: resultsData,\n          fromQuiz: true\n        },\n        replace: true\n      });\n    }, 300);\n  }, [isQuizCompleted, startTime, submissionReason, user, quizData, questions, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, calculateResults, calculateQuizAnalytics, generateQuestionResults, formatTime, navigate, stopComprehensiveMonitoring, exitFullScreen, tabSwitchCount]);\n\n  // Check authentication status and get user data\n  useEffect(() => {\n    const checkAuthentication = () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        const userData = localStorage.getItem('user');\n        if (token && userData) {\n          const parsedUser = JSON.parse(userData);\n          setUser(parsedUser);\n          setIsAuthenticated(true);\n        } else {\n          navigate('/', {\n            replace: true\n          });\n        }\n      } catch (error) {\n        navigate('/', {\n          replace: true\n        });\n      }\n    };\n    checkAuthentication();\n  }, [navigate]);\n\n  // Shuffle array utility\n  const shuffleArray = useCallback(array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  }, []);\n\n  // Auto-save functionality\n  const saveProgress = useCallback(() => {\n    if (!quizData && !isActive) return;\n    const progressData = {\n      currentQuestionIndex,\n      selectedAnswers,\n      reviewFlags,\n      visitedQuestions: Array.from(visitedQuestions),\n      timeSpentPerQuestion,\n      timeLeft,\n      startTime,\n      quizData,\n      questions,\n      user,\n      isActive,\n      submissionReason,\n      tabSwitchCount,\n      timestamp: Date.now(),\n      lastSaved: new Date().toISOString()\n    };\n    try {\n      localStorage.setItem('quiz-progress', JSON.stringify(progressData));\n    } catch (error) {\n      console.error('Failed to save quiz progress:', error);\n    }\n  }, [currentQuestionIndex, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, timeLeft, startTime, isActive, quizData, questions, user, submissionReason, tabSwitchCount]);\n\n  // Load saved progress\n  const loadSavedProgress = useCallback(() => {\n    try {\n      const saved = localStorage.getItem('quiz-progress');\n      if (saved) {\n        var _data$user;\n        const data = JSON.parse(saved);\n        const timeDiff = Date.now() - data.timestamp;\n        const isRecentSession = timeDiff < 24 * 60 * 60 * 1000;\n        if (isRecentSession && ((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.email) === (user === null || user === void 0 ? void 0 : user.email)) {\n          var _data$questions;\n          const shouldRestore = window.confirm(`Resume previous quiz session?\\n\\n` + `Progress: ${Object.keys(data.selectedAnswers || {}).length} of ${((_data$questions = data.questions) === null || _data$questions === void 0 ? void 0 : _data$questions.length) || 0} questions answered\\n` + `Time remaining: ${Math.floor((data.timeLeft || 0) / 60)}:${((data.timeLeft || 0) % 60).toString().padStart(2, '0')}\\n` + `Tab switch violations: ${data.tabSwitchCount || 0}`);\n          if (shouldRestore) {\n            setQuizData(data.quizData);\n            setQuestions(data.questions || []);\n            setCurrentQuestionIndex(data.currentQuestionIndex || 0);\n            setSelectedAnswers(data.selectedAnswers || {});\n            setReviewFlags(data.reviewFlags || {});\n            setVisitedQuestions(new Set(data.visitedQuestions || []));\n            setTimeSpentPerQuestion(data.timeSpentPerQuestion || {});\n            setTimeLeft(data.timeLeft || 0);\n            setStartTime(data.startTime);\n            setTabSwitchCount(data.tabSwitchCount || 0);\n            if (data.isActive && data.timeLeft > 0) {\n              setIsActive(true);\n              setQuestionStartTime(Date.now());\n              setTimeout(() => {\n                if (!isInFullscreen()) {\n                  setShowFullscreenModal(true);\n                }\n              }, 500);\n            }\n            return true;\n          }\n        }\n      }\n    } catch (error) {\n      localStorage.removeItem('quiz-progress');\n    }\n    return false;\n  }, [user, isInFullscreen]);\n\n  // Load and initialize quiz data\n  useEffect(() => {\n    if (!isAuthenticated || !user) return;\n    const loadQuizData = async () => {\n      try {\n        var _data$config, _data$config2, _data$config3;\n        const restored = loadSavedProgress();\n        if (restored) {\n          setLoading(false);\n          return;\n        }\n        const response = await fetch('http://localhost:5000/data/quiz-data.json');\n        if (!response.ok) throw new Error(`Failed to load quiz data: ${response.status}`);\n        const data = await response.json();\n        if (!data.questions || !Array.isArray(data.questions) || data.questions.length === 0) {\n          throw new Error('Invalid quiz data: No questions found');\n        }\n        let shuffledQuestions = (_data$config = data.config) !== null && _data$config !== void 0 && _data$config.shuffleQuestions ? shuffleArray(data.questions) : data.questions;\n        if ((_data$config2 = data.config) !== null && _data$config2 !== void 0 && _data$config2.shuffleOptions) {\n          shuffledQuestions = shuffledQuestions.map(question => ({\n            ...question,\n            options: shuffleArray(question.options || [])\n          }));\n        }\n        setQuizData(data);\n        setQuestions(shuffledQuestions);\n        setTimeLeft(((_data$config3 = data.config) === null || _data$config3 === void 0 ? void 0 : _data$config3.timeLimit) || 1800);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadQuizData();\n  }, [shuffleArray, loadSavedProgress, isAuthenticated, user]);\n\n  // Auto-save every 10 seconds when active\n  useEffect(() => {\n    if (isActive || quizData) {\n      autoSaveRef.current = setInterval(saveProgress, 10000);\n      return () => clearInterval(autoSaveRef.current);\n    }\n  }, [isActive, quizData, saveProgress]);\n\n  // Save on page unload\n  useEffect(() => {\n    const handleBeforeUnload = e => {\n      if (isActive) {\n        saveProgress();\n        e.preventDefault();\n        e.returnValue = 'You have an active quiz session.';\n        return e.returnValue;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [isActive, saveProgress]);\n  const startQuiz = useCallback(async () => {\n    try {\n      if (!user || !user.name || !user.email) {\n        alert('Authentication error. Please log in again.');\n        navigate('/', {\n          replace: true\n        });\n        return;\n      }\n      if (!isFullscreenSupported_()) {\n        const proceed = window.confirm('Fullscreen mode is not supported in your browser. ' + 'This may affect the quiz experience. Do you want to proceed anyway?');\n        if (!proceed) return;\n      }\n      const fullscreenSuccess = await enterFullScreen();\n      if (!fullscreenSuccess && isFullscreenSupported_()) {\n        alert('Failed to enter fullscreen mode. Please allow fullscreen access and try again.');\n        return;\n      }\n      setIsActive(true);\n      const now = Date.now();\n      setStartTime(now);\n      setQuestionStartTime(now);\n      setSubmissionReason('completed');\n      setVisitedQuestions(new Set([0]));\n      setTabSwitchCount(0);\n      startComprehensiveMonitoring();\n      saveProgress();\n    } catch (error) {\n      console.error('Error starting quiz:', error);\n      alert('Failed to start quiz. Please try again.');\n    }\n  }, [user, saveProgress, navigate, isFullscreenSupported_, enterFullScreen, startComprehensiveMonitoring]);\n\n  // Timer functionality\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setSubmissionReason('time_expired');\n            setTimeout(() => handleSubmitQuiz(), 100);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isActive, timeLeft, handleSubmitQuiz]);\n\n  // Time tracking per question\n  useEffect(() => {\n    if (questionStartTime && questions.length > 0 && isActive) {\n      var _questions$currentQue;\n      const questionId = (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.id;\n      if (questionId) {\n        const timeSpent = Date.now() - questionStartTime;\n        setTimeSpentPerQuestion(prev => ({\n          ...prev,\n          [questionId]: (prev[questionId] || 0) + Math.floor(timeSpent / 1000)\n        }));\n      }\n    }\n    setQuestionStartTime(Date.now());\n  }, [currentQuestionIndex, questions, questionStartTime, isActive]);\n\n  // Navigation functions\n  const goToQuestion = useCallback(index => {\n    if (index >= 0 && index < questions.length) {\n      setCurrentQuestionIndex(index);\n      setVisitedQuestions(prev => new Set([...prev, index]));\n      saveProgress();\n    }\n  }, [questions.length, saveProgress]);\n  const nextQuestion = useCallback(() => {\n    if (currentQuestionIndex < questions.length - 1) {\n      goToQuestion(currentQuestionIndex + 1);\n    }\n  }, [currentQuestionIndex, questions.length, goToQuestion]);\n  const previousQuestion = useCallback(() => {\n    if (currentQuestionIndex > 0) {\n      goToQuestion(currentQuestionIndex - 1);\n    }\n  }, [currentQuestionIndex, goToQuestion]);\n\n  // Answer selection\n  const handleOptionSelect = useCallback((questionId, optionId) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: optionId\n    }));\n    setVisitedQuestions(prev => new Set([...prev, currentQuestionIndex]));\n    setTimeout(saveProgress, 100);\n  }, [currentQuestionIndex, saveProgress]);\n\n  // Clear selection\n  const clearSelection = useCallback(() => {\n    var _questions$currentQue2;\n    const currentQuestionId = (_questions$currentQue2 = questions[currentQuestionIndex]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.id;\n    if (currentQuestionId) {\n      setSelectedAnswers(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[currentQuestionId];\n        return updated;\n      });\n      saveProgress();\n    }\n  }, [questions, currentQuestionIndex, saveProgress]);\n\n  // Toggle review flag\n  const toggleReviewFlag = useCallback(() => {\n    var _questions$currentQue3;\n    const currentQuestionId = (_questions$currentQue3 = questions[currentQuestionIndex]) === null || _questions$currentQue3 === void 0 ? void 0 : _questions$currentQue3.id;\n    if (currentQuestionId) {\n      setReviewFlags(prev => ({\n        ...prev,\n        [currentQuestionId]: !prev[currentQuestionId]\n      }));\n      saveProgress();\n    }\n  }, [questions, currentQuestionIndex, saveProgress]);\n\n  // Submit confirmation\n  const confirmSubmitQuiz = useCallback(() => {\n    setShowSubmissionModal(true);\n  }, []);\n\n  // Handle modal actions\n  const handleModalCancel = useCallback(() => {\n    setShowSubmissionModal(false);\n  }, []);\n  const handleModalConfirm = useCallback(() => {\n    handleSubmitQuiz();\n  }, [handleSubmitQuiz]);\n\n  // Handle fullscreen modal\n  const handleFullscreenModalOk = useCallback(async () => {\n    const success = await enterFullScreen();\n    if (success || !isFullscreenSupported) {\n      setShowFullscreenModal(false);\n    }\n  }, [enterFullScreen, isFullscreenSupported]);\n\n  // Get question status\n  const getQuestionStatus = useCallback(index => {\n    var _questions$index;\n    const questionId = (_questions$index = questions[index]) === null || _questions$index === void 0 ? void 0 : _questions$index.id;\n    if (!questionId) return 'not-visited';\n    const isAnswered = selectedAnswers[questionId];\n    const isReviewed = reviewFlags[questionId];\n    const isVisited = visitedQuestions.has(index);\n    if (isAnswered && isReviewed) return 'answered-for-review';\n    if (isAnswered) return 'answered';\n    if (isReviewed) return 'for-review';\n    if (isVisited) return 'visited';\n    return 'not-visited';\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions]);\n\n  // Calculate counts for sidebar filters\n  const answeredCount = Object.keys(selectedAnswers).length;\n  const notVisitedCount = questions.length - visitedQuestions.size;\n  const reviewedCount = Object.values(reviewFlags).filter(flag => flag).length;\n  const unansweredCount = questions.length - answeredCount;\n\n  // Filter questions based on type\n  const getQuestionsByType = useCallback(type => {\n    return questions.map((_, index) => {\n      var _questions$index2;\n      const questionId = (_questions$index2 = questions[index]) === null || _questions$index2 === void 0 ? void 0 : _questions$index2.id;\n      if (!questionId) return false;\n      const isAnswered = selectedAnswers[questionId];\n      const isReviewed = reviewFlags[questionId];\n      const isVisited = visitedQuestions.has(index);\n      switch (type) {\n        case 'answered':\n          return isAnswered;\n        case 'not-visited':\n          return !isVisited;\n        case 'reviewed':\n          return isReviewed;\n        default:\n          return false;\n      }\n    }).map((match, index) => match ? index : -1).filter(index => index !== -1);\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions]);\n\n  // Navigate to first question of specific type\n  const goToQuestionType = useCallback(type => {\n    const questionsByType = getQuestionsByType(type);\n    if (questionsByType.length > 0) {\n      goToQuestion(questionsByType[0]);\n    }\n  }, [getQuestionsByType, goToQuestion]);\n  useEffect(() => {\n    if (!isActive || showSubmissionModal || showFullscreenModal) return;\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          previousQuestion();\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          nextQuestion();\n          break;\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n          const optionIndex = parseInt(e.key, 10) - 1;\n          const currentQuestion = questions[currentQuestionIndex];\n          if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.options[optionIndex]) {\n            e.preventDefault();\n            handleOptionSelect(currentQuestion.id, currentQuestion.options[optionIndex].id);\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [isActive, showSubmissionModal, showFullscreenModal, previousQuestion, nextQuestion, questions, currentQuestionIndex, handleOptionSelect]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n      if (autoSaveRef.current) clearInterval(autoSaveRef.current);\n      stopComprehensiveMonitoring();\n    };\n  }, [stopComprehensiveMonitoring]);\n  if (!isAuthenticated || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Checking Authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading Quiz...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we prepare your examination.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error Loading Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"retry-btn\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"home-btn\",\n        children: \"Go Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 7\n    }, this);\n  }\n  if (!quizData || !questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Quiz Data Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"retry-btn\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"home-btn\",\n        children: \"Go Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isActive && !isQuizCompleted) {\n    var _quizData$config8, _quizData$config9, _quizData$config0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-start-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Online Quiz - \", ((_quizData$config8 = quizData.config) === null || _quizData$config8 === void 0 ? void 0 : _quizData$config8.title) || 'Assessment']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ((_quizData$config9 = quizData.config) === null || _quizData$config9 === void 0 ? void 0 : _quizData$config9.description) || 'Complete the quiz within the time limit.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Student Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 16\n            }, this), \" \", (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.firstName) || 'Unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 16\n            }, this), \" \", (user === null || user === void 0 ? void 0 : user.email) || 'unknown@email.com']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Questions: \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Time Limit: \", formatTime(timeLeft)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Passing Score: \", ((_quizData$config0 = quizData.config) === null || _quizData$config0 === void 0 ? void 0 : _quizData$config0.passingScore) || 70, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Answer all questions within the time limit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You can navigate between questions using arrow keys\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Use number keys 1-4 to quickly select options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Mark questions for review if needed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Your progress is automatically saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"The quiz will enter fullscreen mode automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"You must remain in fullscreen mode throughout the exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tab switching and window switching are monitored\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-quiz-btn\",\n          onClick: startQuiz,\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedAnswer = selectedAnswers[currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.id];\n  const isMarkedForReview = reviewFlags[currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.id];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    style: {\n      width: '100vw',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [showFullscreenModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen-modal-overlay mandatory-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen-modal enhanced-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fullscreen-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Fullscreen Mode Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"security-badge\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"SECURITY REQUIREMENT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fullscreen-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fullscreen-warning-icon pulsing\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Examination Security Protocol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"To maintain the integrity of this examination, you must remain in fullscreen mode.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a mandatory requirement and cannot be bypassed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"security-notice\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Security Notice:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Switching windows or tabs is not allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Developer tools are disabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Right-click is disabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"All navigation must be done within the quiz interface\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1174,\n                  columnNumber: 21\n                }, this), tabSwitchCount > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"violation-notice\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Violations detected: \", tabSwitchCount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1177,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 17\n            }, this), !isFullscreenSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"browser-warning\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Warning:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1185,\n                  columnNumber: 24\n                }, this), \" Your browser may not fully support fullscreen mode. Please use a modern browser like Chrome, Firefox, or Safari for the best experience.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Try pressing \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"F11\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1186,\n                  columnNumber: 37\n                }, this), \" to enter fullscreen mode manually.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fullscreen-modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fullscreen-modal-btn primary-btn pulse-btn\",\n            onClick: handleFullscreenModalOk,\n            children: \"Enter Fullscreen Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 9\n    }, this), showSubmissionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submission-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Submit Quiz Confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-warning\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"This action cannot be undone!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Quiz Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-icon\",\n                  children: \"\\uD83D\\uDCDD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Total Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1223,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: questions.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1222,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-item answered\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-icon\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1229,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Answered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: answeredCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1232,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1230,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 19\n              }, this), unansweredCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-item unanswered\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-icon\",\n                  children: \"\\u2717\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Unanswered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: unansweredCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1239,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 21\n              }, this), reviewedCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-item reviewed\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-icon\",\n                  children: \"\\uD83D\\uDEA9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Marked for Review\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1250,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: reviewedCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1251,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-item time\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-icon\",\n                  children: \"\\u23F0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1257,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Time Remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: formatTime(timeLeft)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1260,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1258,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1256,\n                columnNumber: 19\n              }, this), tabSwitchCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-item violations\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-icon\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Tab Switch Violations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1268,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: tabSwitchCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1269,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 17\n            }, this), unansweredCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You have \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: unansweredCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 32\n                }, this), \" unanswered question\", unansweredCount > 1 ? 's' : '', \". These will be marked as incorrect.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"completion-rate\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completion-label\",\n                children: \"Completion Rate:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"completion-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"completion-fill\",\n                  style: {\n                    width: `${answeredCount / questions.length * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1287,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completion-percentage\",\n                children: [Math.round(answeredCount / questions.length * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn cancel-btn\",\n            onClick: handleModalCancel,\n            children: \"Continue Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn confirm-btn\",\n            onClick: handleModalConfirm,\n            children: \"Submit Final Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [currentQuestionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-btn answered\",\n          onClick: () => goToQuestionType('answered'),\n          disabled: answeredCount === 0,\n          children: [\"Answered: \", answeredCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-btn not-visited\",\n          onClick: () => goToQuestionType('not-visited'),\n          disabled: notVisitedCount === 0,\n          children: [\"Not Visited: \", notVisitedCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-btn reviewed\",\n          onClick: () => goToQuestionType('reviewed'),\n          disabled: reviewedCount === 0,\n          children: [\"Reviewed: \", reviewedCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-grid\",\n        children: questions.map((_, index) => {\n          const status = getQuestionStatus(index);\n          const isCurrent = index === currentQuestionIndex;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `question-btn ${status} ${isCurrent ? 'current' : ''}`,\n            onClick: () => goToQuestion(index),\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1354,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Answered: \", Object.keys(selectedAnswers).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remaining: \", questions.length - Object.keys(selectedAnswers).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 11\n        }, this), tabSwitchCount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"violations-count\",\n          children: [\"Violations: \", tabSwitchCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-quiz-btn\",\n        onClick: confirmSubmitQuiz,\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name-text\",\n              children: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.firstName) || 'Student'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fullscreen-toggle-btn minimal\",\n            onClick: enterFullScreen,\n            title: \"Enter Fullscreen Mode\",\n            \"aria-label\": \"Enter Fullscreen Mode\",\n            children: \"\\u26F6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-text\",\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-label\",\n            children: \"Time Remaining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: currentQuestion === null || currentQuestion === void 0 ? void 0 : (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => {\n            const isSelected = selectedAnswer === option.id;\n            const prefix = String.fromCharCode(65 + index);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option-item ${isSelected ? 'selected' : ''}`,\n              onClick: () => handleOptionSelect(currentQuestion.id, option.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-prefix\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-letter\",\n                  children: prefix\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1429,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-key\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1430,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-text\",\n                  children: option.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1433,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `question-${currentQuestion.id}`,\n                  value: option.id,\n                  checked: isSelected,\n                  onChange: () => handleOptionSelect(currentQuestion.id, option.id),\n                  className: \"option-radio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1434,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1432,\n                columnNumber: 19\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-left\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn\",\n            onClick: previousQuestion,\n            disabled: currentQuestionIndex === 0,\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn clear-btn\",\n            onClick: clearSelection,\n            disabled: !selectedAnswer,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nav-btn ${isMarkedForReview ? 'review-active' : ''}`,\n            onClick: toggleReviewFlag,\n            children: isMarkedForReview ? 'Marked' : 'Mark for Review'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn\",\n            onClick: nextQuestion,\n            disabled: currentQuestionIndex === questions.length - 1,\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1144,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizDisplay, \"MrF4NX2A1SM0zu8wAIZcKVVtiyE=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizDisplay;\nexport default QuizDisplay;\nvar _c;\n$RefreshReg$(_c, \"QuizDisplay\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useNavigate","jsxDEV","_jsxDEV","QuizDisplay","_s","_currentQuestion$opti","navigate","quizData","setQuizData","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","reviewFlags","setReviewFlags","visitedQuestions","setVisitedQuestions","Set","timeSpentPerQuestion","setTimeSpentPerQuestion","timeLeft","setTimeLeft","isActive","setIsActive","startTime","setStartTime","questionStartTime","setQuestionStartTime","loading","setLoading","error","setError","isQuizCompleted","setIsQuizCompleted","submissionReason","setSubmissionReason","showSubmissionModal","setShowSubmissionModal","showFullscreenModal","setShowFullscreenModal","fullscreenRetryCount","setFullscreenRetryCount","isFullscreenSupported","setIsFullscreenSupported","tabSwitchCount","setTabSwitchCount","user","setUser","isAuthenticated","setIsAuthenticated","timerRef","autoSaveRef","fullscreenCheckRef","visibilityRef","isFullscreenSupported_","document","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","Element","prototype","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","isInFullscreen","hasFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","isFullscreenMode","window","innerHeight","screen","height","outerHeight","innerWidth","width","screenTop","screenY","navigator","userAgent","includes","Math","abs","documentElement","clientHeight","startComprehensiveMonitoring","current","clearInterval","setInterval","console","warn","hidden","prev","stopComprehensiveMonitoring","enterFullScreen","elem","fullscreenOptions","navigationUI","fullscreenPromise","ALLOW_KEYBOARD_INPUT","Error","setTimeout","log","message","isWindows","alert","exitFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","handleFullscreenChange","isCurrentlyFullscreen","handleVisibilityChange","handleWindowBlur","handleWindowFocus","handleResize","handleKeydown","e","key","keyCode","preventDefault","altKey","metaKey","ctrlKey","shiftKey","handleContextMenu","handleBeforeUnload","returnValue","addEventListener","removeEventListener","checkFullscreenOnLoad","savedProgress","localStorage","getItem","data","JSON","parse","formatTime","seconds","mins","floor","secs","toString","padStart","getGrade","percentage","calculateResults","_quizData$config","length","correctAnswers","totalScore","maxScore","forEach","question","_quizData$difficultie","difficulty","difficulties","find","d","id","points","userAnswer","correctOption","options","opt","correct","round","passed","config","passingScore","totalQuestions","answeredQuestions","Object","keys","skippedQuestions","grade","calculateQuizAnalytics","answeredCount","skippedCount","reviewedCount","values","filter","flag","visitedCount","size","difficultyStats","diff","questionsOfDifficulty","q","correctOfDifficulty","name","total","attempted","categoryStats","categories","map","category","Boolean","questionsOfCategory","correctOfCategory","summary","reviewedQuestions","completionRate","reviewRate","difficultyBreakdown","categoryBreakdown","timeAnalysis","questionsWithTimeData","averageTimePerQuestion","reduce","a","b","fastestQuestion","min","slowestQuestion","max","generateQuestionResults","index","_question$options$fin","_quizData$difficultie2","_quizData$difficultie3","isCorrect","wasReviewed","wasVisited","has","timeSpent","questionNumber","questionId","questionText","text","userAnswerId","userAnswerText","correctAnswerId","correctAnswerText","isAnswered","status","handleSubmitQuiz","_quizData$config2","_quizData$config3","_quizData$config4","_quizData$config5","_quizData$config6","_quizData$config7","results","submissionTime","Date","now","totalTimeSpent","quizAnalytics","resultsData","student","firstName","email","userId","quizConfig","title","description","timeLimit","shuffleQuestions","shuffleOptions","timing","toISOString","submitTime","totalTimeSpentFormatted","analytics","submission","reason","timestamp","tabSwitchViolations","questionResults","rawData","Array","from","setItem","stringify","removeItem","state","fromQuiz","replace","checkAuthentication","token","userData","parsedUser","shuffleArray","array","shuffled","i","j","random","saveProgress","progressData","lastSaved","loadSavedProgress","saved","_data$user","timeDiff","isRecentSession","_data$questions","shouldRestore","confirm","loadQuizData","_data$config","_data$config2","_data$config3","restored","response","fetch","ok","json","isArray","shuffledQuestions","err","startQuiz","proceed","fullscreenSuccess","_questions$currentQue","goToQuestion","nextQuestion","previousQuestion","handleOptionSelect","optionId","clearSelection","_questions$currentQue2","currentQuestionId","updated","toggleReviewFlag","_questions$currentQue3","confirmSubmitQuiz","handleModalCancel","handleModalConfirm","handleFullscreenModalOk","success","getQuestionStatus","_questions$index","isReviewed","isVisited","notVisitedCount","unansweredCount","getQuestionsByType","type","_","_questions$index2","match","goToQuestionType","questionsByType","handleKeyPress","optionIndex","parseInt","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","_quizData$config8","_quizData$config9","_quizData$config0","selectedAnswer","isMarkedForReview","style","overflow","disabled","isCurrent","option","isSelected","prefix","String","fromCharCode","value","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/thoraj/Desktop/QUIZZZZZZ/frontend/src/components/QuizDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/QuizDisplay.css';\n\nconst QuizDisplay = () => {\n  // Navigation hook\n  const navigate = useNavigate();\n  \n  // Core quiz data state\n  const [quizData, setQuizData] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [reviewFlags, setReviewFlags] = useState({});\n  const [visitedQuestions, setVisitedQuestions] = useState(new Set());\n  const [timeSpentPerQuestion, setTimeSpentPerQuestion] = useState({});\n  \n  // Timer and session state\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  \n  // UI and system state\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [submissionReason, setSubmissionReason] = useState('completed');\n  \n  // Modal and fullscreen state\n  const [showSubmissionModal, setShowSubmissionModal] = useState(false);\n  const [showFullscreenModal, setShowFullscreenModal] = useState(false);\n  const [fullscreenRetryCount, setFullscreenRetryCount] = useState(0);\n  const [isFullscreenSupported, setIsFullscreenSupported] = useState(true);\n  const [tabSwitchCount, setTabSwitchCount] = useState(0);\n  \n  // User state\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  // Refs for cleanup and management\n  const timerRef = useRef(null);\n  const autoSaveRef = useRef(null);\n  const fullscreenCheckRef = useRef(null);\n  const visibilityRef = useRef(null);\n\n  // **ENHANCED: Cross-platform fullscreen support**\n  const isFullscreenSupported_ = useCallback(() => {\n    return !!(\n      document.fullscreenEnabled ||\n      document.webkitFullscreenEnabled ||\n      document.mozFullScreenEnabled ||\n      document.msFullscreenEnabled ||\n      Element.prototype.requestFullscreen ||\n      Element.prototype.webkitRequestFullscreen ||\n      Element.prototype.mozRequestFullScreen ||\n      Element.prototype.msRequestFullscreen\n    );\n  }, []);\n\n  // **IMPROVED: More reliable fullscreen detection for all OS**\nconst isInFullscreen = useCallback(() => {\n  const hasFullscreenElement = !!(\n    document.fullscreenElement || \n    document.webkitFullscreenElement || \n    document.mozFullScreenElement || \n    document.msFullscreenElement\n  );\n\n  // Additional checks for Windows and other OS\n  const isFullscreenMode = \n    hasFullscreenElement ||\n    (window.innerHeight === window.screen.height) ||\n    (window.outerHeight === window.screen.height) ||\n    (window.innerWidth === window.screen.width && window.innerHeight === window.screen.height) ||\n    (!window.screenTop && !window.screenY) ||\n    (navigator.userAgent.includes('Windows') && window.screen && \n     Math.abs(window.innerHeight - window.screen.height) <= 1) ||\n    (document.documentElement.clientHeight === window.screen.height);\n\n  return isFullscreenMode;\n}, []);\n\n\n  // **ENHANCED: Comprehensive tab and window switching detection**\n  const startComprehensiveMonitoring = useCallback(() => {\n    // Clear existing intervals\n    if (fullscreenCheckRef.current) {\n      clearInterval(fullscreenCheckRef.current);\n    }\n    if (visibilityRef.current) {\n      clearInterval(visibilityRef.current);\n    }\n    \n    // Fullscreen monitoring - every 300ms for better responsiveness\n    fullscreenCheckRef.current = setInterval(() => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        if (!isInFullscreen()) {\n          console.warn('Fullscreen exited - showing warning modal');\n          setShowFullscreenModal(true);\n        }\n      }\n    }, 300);\n    \n    // Additional visibility monitoring for tab switches\n    visibilityRef.current = setInterval(() => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal && document.hidden) {\n        setTabSwitchCount(prev => prev + 1);\n        console.warn('Tab switch detected via interval check');\n        if (!showFullscreenModal) {\n          setShowFullscreenModal(true);\n        }\n      }\n    }, 200);\n  }, [isActive, isQuizCompleted, showSubmissionModal, isInFullscreen]);\n\n  const stopComprehensiveMonitoring = useCallback(() => {\n    if (fullscreenCheckRef.current) {\n      clearInterval(fullscreenCheckRef.current);\n      fullscreenCheckRef.current = null;\n    }\n    if (visibilityRef.current) {\n      clearInterval(visibilityRef.current);\n      visibilityRef.current = null;\n    }\n  }, []);\n\n  // **IMPROVED: Enhanced fullscreen entry with better Windows support**\n  const enterFullScreen = useCallback(async () => {\n    try {\n      if (!isFullscreenSupported_()) {\n        console.warn('Fullscreen is not supported in this browser');\n        setIsFullscreenSupported(false);\n        return false;\n      }\n\n      const elem = document.documentElement;\n      \n      // Enhanced fullscreen request with more options for Windows\n      const fullscreenOptions = {\n        navigationUI: \"hide\"\n      };\n\n      let fullscreenPromise = null;\n\n      if (elem.requestFullscreen) {\n        fullscreenPromise = elem.requestFullscreen(fullscreenOptions);\n      } else if (elem.mozRequestFullScreen) {\n        fullscreenPromise = elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        // Enhanced for Safari and Chrome on different OS\n        fullscreenPromise = elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else if (elem.msRequestFullscreen) {\n        fullscreenPromise = elem.msRequestFullscreen();\n      } else {\n        throw new Error('No fullscreen method available');\n      }\n\n      if (fullscreenPromise) {\n        await fullscreenPromise;\n      }\n      \n      // Additional verification for Windows\n      setTimeout(() => {\n        if (!isInFullscreen()) {\n          console.warn('Fullscreen may not have activated properly');\n          setFullscreenRetryCount(prev => prev + 1);\n          if (fullscreenRetryCount < 2) {\n            setTimeout(() => enterFullScreen(), 500);\n          }\n        } else {\n          console.log('Fullscreen activated successfully');\n          setShowFullscreenModal(false);\n          setFullscreenRetryCount(0);\n          startComprehensiveMonitoring();\n        }\n      }, 100);\n      \n      return true;\n    } catch (error) {\n      console.warn('Could not enter fullscreen mode:', error.message);\n      setFullscreenRetryCount(prev => prev + 1);\n      \n      if (fullscreenRetryCount >= 3) {\n        const isWindows = navigator.userAgent.includes('Windows');\n        const message = isWindows \n          ? 'Fullscreen mode is required. Please press F11 or allow fullscreen permissions and try again.'\n          : 'Fullscreen mode is required. Please allow fullscreen permissions and try again.';\n        alert(message);\n      }\n      \n      return false;\n    }\n  }, [isFullscreenSupported_, fullscreenRetryCount, startComprehensiveMonitoring, isInFullscreen]);\n\n  // **IMPROVED: Better exit fullscreen with cross-platform support**\n  const exitFullScreen = useCallback(async () => {\n    try {\n      if (document.exitFullscreen) {\n        await document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        await document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        await document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        await document.msExitFullscreen();\n      }\n      console.log('Fullscreen exited successfully');\n      stopComprehensiveMonitoring();\n    } catch (error) {\n      console.warn('Could not exit fullscreen mode:', error.message);\n    }\n  }, [stopComprehensiveMonitoring]);\n\n  // **ENHANCED: Comprehensive event listeners for better tab/window switching detection**\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      const isCurrentlyFullscreen = isInFullscreen();\n      console.log('Fullscreen change detected:', isCurrentlyFullscreen);\n      \n      if (isActive && !isQuizCompleted && !showSubmissionModal && !isCurrentlyFullscreen) {\n        setShowFullscreenModal(true);\n      }\n    };\n\n    const handleVisibilityChange = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        if (document.hidden) {\n          setTabSwitchCount(prev => prev + 1);\n          console.warn('Tab hidden - possible switch detected');\n          setShowFullscreenModal(true);\n        } else if (!isInFullscreen()) {\n          console.warn('Tab visible but not fullscreen');\n          setShowFullscreenModal(true);\n        }\n      }\n    };\n\n    const handleWindowBlur = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        setTabSwitchCount(prev => prev + 1);\n        console.warn('Window blur - switch detected');\n        setShowFullscreenModal(true);\n      }\n    };\n\n    const handleWindowFocus = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal && !isInFullscreen()) {\n        console.warn('Window focused but not fullscreen');\n        setTimeout(() => {\n          if (!isInFullscreen()) {\n            setShowFullscreenModal(true);\n          }\n        }, 100);\n      }\n    };\n\n    const handleResize = () => {\n      if (isActive && !isQuizCompleted && !showSubmissionModal) {\n        setTimeout(() => {\n          if (!isInFullscreen()) {\n            setShowFullscreenModal(true);\n          }\n        }, 150);\n      }\n    };\n\n    const handleKeydown = (e) => {\n      if (isActive && !isQuizCompleted) {\n        // Prevent F11 and other fullscreen exit keys\n        if (e.key === 'F11' || e.keyCode === 122) {\n          e.preventDefault();\n          if (!isInFullscreen()) {\n            setShowFullscreenModal(true);\n          }\n        }\n        // Prevent Alt+Tab (Windows), Cmd+Tab (Mac)\n        if ((e.altKey && e.key === 'Tab') || (e.metaKey && e.key === 'Tab')) {\n          e.preventDefault();\n          setTabSwitchCount(prev => prev + 1);\n          setShowFullscreenModal(true);\n        }\n        // Prevent Alt+F4, Ctrl+W, Ctrl+T, etc.\n        if (e.altKey && e.key === 'F4') e.preventDefault();\n        if (e.ctrlKey && (e.key === 'w' || e.key === 't' || e.key === 'n')) e.preventDefault();\n        if (e.ctrlKey && e.shiftKey && e.key === 'I') e.preventDefault();\n        if (e.key === 'F12' || e.keyCode === 123) e.preventDefault();\n      }\n    };\n\n    const handleContextMenu = (e) => {\n      if (isActive && !isQuizCompleted) {\n        e.preventDefault();\n      }\n    };\n\n    // Page Visibility API events\n    const handleBeforeUnload = (e) => {\n      if (isActive && !isQuizCompleted) {\n        e.preventDefault();\n        e.returnValue = 'Quiz in progress';\n        return e.returnValue;\n      }\n    };\n\n    // Add all event listeners\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\n    document.addEventListener('mozfullscreenchange', handleFullscreenChange);\n    document.addEventListener('MSFullscreenChange', handleFullscreenChange);\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('blur', handleWindowBlur);\n    window.addEventListener('focus', handleWindowFocus);\n    window.addEventListener('resize', handleResize);\n    document.addEventListener('keydown', handleKeydown);\n    document.addEventListener('contextmenu', handleContextMenu);\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n      document.removeEventListener('webkitfullscreenchange', handleFullscreenChange);\n      document.removeEventListener('mozfullscreenchange', handleFullscreenChange);\n      document.removeEventListener('MSFullscreenChange', handleFullscreenChange);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('blur', handleWindowBlur);\n      window.removeEventListener('focus', handleWindowFocus);\n      window.removeEventListener('resize', handleResize);\n      document.removeEventListener('keydown', handleKeydown);\n      document.removeEventListener('contextmenu', handleContextMenu);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isActive, isQuizCompleted, showSubmissionModal, isInFullscreen]);\n\n  // Check fullscreen on page load/refresh\n  useEffect(() => {\n    const checkFullscreenOnLoad = () => {\n      const savedProgress = localStorage.getItem('quiz-progress');\n      if (savedProgress) {\n        try {\n          const data = JSON.parse(savedProgress);\n          if (data.isActive && !isInFullscreen()) {\n            setTimeout(() => {\n              setShowFullscreenModal(true);\n            }, 1000);\n          }\n        } catch (error) {\n          console.error('Error checking saved progress:', error);\n        }\n      }\n    };\n\n    if (isAuthenticated && user) {\n      checkFullscreenOnLoad();\n    }\n  }, [isAuthenticated, user, isInFullscreen]);\n\n  // Format time utility\n  const formatTime = useCallback((seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  // Grade utility function\n  const getGrade = useCallback((percentage) => {\n    if (percentage >= 90) return 'A+';\n    if (percentage >= 85) return 'A';\n    if (percentage >= 80) return 'B+';\n    if (percentage >= 75) return 'B';\n    if (percentage >= 70) return 'C+';\n    if (percentage >= 65) return 'C';\n    if (percentage >= 60) return 'D';\n    return 'F';\n  }, []);\n\n  // Enhanced results calculation\n  const calculateResults = useCallback(() => {\n    if (!questions.length || !quizData) return null;\n    \n    let correctAnswers = 0;\n    let totalScore = 0;\n    let maxScore = 0;\n    \n    questions.forEach(question => {\n      const difficulty = quizData.difficulties?.find(d => d.id === question.difficulty);\n      const points = difficulty?.points || 1;\n      maxScore += points;\n      \n      const userAnswer = selectedAnswers[question.id];\n      const correctOption = question.options.find(opt => opt.correct);\n      \n      if (userAnswer === correctOption?.id) {\n        correctAnswers++;\n        totalScore += points;\n      }\n    });\n    \n    const percentage = maxScore > 0 ? Math.round((totalScore / maxScore) * 100) : 0;\n    const passed = percentage >= (quizData.config?.passingScore || 70);\n    \n    return {\n      correctAnswers,\n      totalQuestions: questions.length,\n      answeredQuestions: Object.keys(selectedAnswers).length,\n      skippedQuestions: questions.length - Object.keys(selectedAnswers).length,\n      totalScore,\n      maxScore,\n      percentage,\n      passed,\n      grade: getGrade(percentage)\n    };\n  }, [questions, quizData, selectedAnswers, getGrade]);\n\n  // Calculate comprehensive quiz analytics\n  const calculateQuizAnalytics = useCallback(() => {\n    const answeredCount = Object.keys(selectedAnswers).length;\n    const skippedCount = questions.length - answeredCount;\n    const reviewedCount = Object.values(reviewFlags).filter(flag => flag).length;\n    const visitedCount = visitedQuestions.size;\n    \n    const difficultyStats = {};\n    if (quizData?.difficulties) {\n      quizData.difficulties.forEach(diff => {\n        const questionsOfDifficulty = questions.filter(q => q.difficulty === diff.id);\n        const correctOfDifficulty = questionsOfDifficulty.filter(q => {\n          const userAnswer = selectedAnswers[q.id];\n          const correctOption = q.options.find(opt => opt.correct);\n          return userAnswer === correctOption?.id;\n        });\n        \n        difficultyStats[diff.name] = {\n          total: questionsOfDifficulty.length,\n          attempted: questionsOfDifficulty.filter(q => selectedAnswers[q.id]).length,\n          correct: correctOfDifficulty.length,\n          percentage: questionsOfDifficulty.length > 0 \n            ? Math.round((correctOfDifficulty.length / questionsOfDifficulty.length) * 100) \n            : 0\n        };\n      });\n    }\n    \n    const categoryStats = {};\n    const categories = [...new Set(questions.map(q => q.category).filter(Boolean))];\n    categories.forEach(category => {\n      const questionsOfCategory = questions.filter(q => q.category === category);\n      const correctOfCategory = questionsOfCategory.filter(q => {\n        const userAnswer = selectedAnswers[q.id];\n        const correctOption = q.options.find(opt => opt.correct);\n        return userAnswer === correctOption?.id;\n      });\n      \n      categoryStats[category] = {\n        total: questionsOfCategory.length,\n        attempted: questionsOfCategory.filter(q => selectedAnswers[q.id]).length,\n        correct: correctOfCategory.length,\n        percentage: questionsOfCategory.length > 0 \n          ? Math.round((correctOfCategory.length / questionsOfCategory.length) * 100) \n          : 0\n      };\n    });\n    \n    return {\n      summary: {\n        totalQuestions: questions.length,\n        answeredQuestions: answeredCount,\n        skippedQuestions: skippedCount,\n        reviewedQuestions: reviewedCount,\n        visitedQuestions: visitedCount,\n        completionRate: Math.round((answeredCount / questions.length) * 100),\n        reviewRate: Math.round((reviewedCount / questions.length) * 100),\n        tabSwitchCount\n      },\n      difficultyBreakdown: difficultyStats,\n      categoryBreakdown: categoryStats,\n      timeAnalysis: {\n        totalQuestions: questions.length,\n        questionsWithTimeData: Object.keys(timeSpentPerQuestion).length,\n        averageTimePerQuestion: Object.keys(timeSpentPerQuestion).length > 0 \n          ? Math.round(Object.values(timeSpentPerQuestion).reduce((a, b) => a + b, 0) / Object.keys(timeSpentPerQuestion).length)\n          : 0,\n        fastestQuestion: Object.keys(timeSpentPerQuestion).length > 0 \n          ? Math.min(...Object.values(timeSpentPerQuestion)) \n          : 0,\n        slowestQuestion: Object.keys(timeSpentPerQuestion).length > 0 \n          ? Math.max(...Object.values(timeSpentPerQuestion)) \n          : 0\n      }\n    };\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, quizData, tabSwitchCount]);\n\n  // Generate detailed question results\n  const generateQuestionResults = useCallback(() => {\n    return questions.map((question, index) => {\n      const userAnswer = selectedAnswers[question.id];\n      const correctOption = question.options.find(opt => opt.correct);\n      const isCorrect = userAnswer === correctOption?.id;\n      const wasReviewed = reviewFlags[question.id] || false;\n      const wasVisited = visitedQuestions.has(index);\n      const timeSpent = timeSpentPerQuestion[question.id] || 0;\n      \n      return {\n        questionNumber: index + 1,\n        questionId: question.id,\n        questionText: question.text,\n        difficulty: question.difficulty,\n        category: question.category,\n        userAnswerId: userAnswer,\n        userAnswerText: userAnswer ? question.options.find(opt => opt.id === userAnswer)?.text : null,\n        correctAnswerId: correctOption?.id,\n        correctAnswerText: correctOption?.text,\n        isCorrect,\n        isAnswered: !!userAnswer,\n        wasReviewed,\n        wasVisited,\n        timeSpent,\n        status: !userAnswer ? 'skipped' : isCorrect ? 'correct' : 'incorrect',\n        points: isCorrect ? (quizData?.difficulties?.find(d => d.id === question.difficulty)?.points || 1) : 0\n      };\n    });\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, quizData]);\n\n  const handleSubmitQuiz = useCallback(async () => {\n    if (isQuizCompleted) return;\n    \n    setIsActive(false);\n    setIsQuizCompleted(true);\n    setShowSubmissionModal(false);\n    stopComprehensiveMonitoring();\n    \n    await exitFullScreen();\n    \n    const results = calculateResults();\n    const submissionTime = Date.now();\n    const totalTimeSpent = startTime ? submissionTime - startTime : 0;\n    \n    const quizAnalytics = calculateQuizAnalytics();\n    \n    const resultsData = {\n      ...results,\n      student: {\n        name: user?.name || user?.firstName || 'Unknown',\n        email: user?.email || 'unknown@email.com',\n        id: user?.id || user?.userId || 'unknown'\n      },\n      quizConfig: {\n        title: quizData?.config?.title || 'Quiz',\n        description: quizData?.config?.description || '',\n        timeLimit: quizData?.config?.timeLimit || 1800,\n        passingScore: quizData?.config?.passingScore || 70,\n        totalQuestions: questions.length,\n        shuffleQuestions: quizData?.config?.shuffleQuestions || false,\n        shuffleOptions: quizData?.config?.shuffleOptions || false\n      },\n      timing: {\n        startTime: new Date(startTime).toISOString(),\n        submitTime: new Date(submissionTime).toISOString(),\n        totalTimeSpent: totalTimeSpent,\n        totalTimeSpentFormatted: formatTime(Math.floor(totalTimeSpent / 1000)),\n        timeSpentPerQuestion: timeSpentPerQuestion,\n        averageTimePerQuestion: Math.floor(totalTimeSpent / questions.length / 1000)\n      },\n      analytics: quizAnalytics,\n      submission: {\n        reason: submissionReason,\n        timestamp: new Date(submissionTime).toISOString(),\n        userAgent: navigator.userAgent,\n        completionRate: Math.round((Object.keys(selectedAnswers).length / questions.length) * 100),\n        tabSwitchViolations: tabSwitchCount\n      },\n      questionResults: generateQuestionResults(),\n      rawData: {\n        selectedAnswers,\n        reviewFlags,\n        visitedQuestions: Array.from(visitedQuestions),\n        questions: questions.map(q => ({\n          id: q.id,\n          text: q.text,\n          difficulty: q.difficulty,\n          category: q.category,\n          options: q.options.map(opt => ({\n            id: opt.id,\n            text: opt.text,\n            correct: opt.correct\n          }))\n        }))\n      }\n    };\n    \n    try {\n      localStorage.setItem('quiz-results', JSON.stringify(resultsData));\n    } catch (error) {\n      console.error('Failed to save results:', error);\n    }\n    \n    localStorage.removeItem('quiz-progress');\n    \n    setTimeout(() => {\n      navigate('/results', { \n        state: { \n          results: resultsData,\n          fromQuiz: true \n        },\n        replace: true \n      });\n    }, 300);\n    \n  }, [isQuizCompleted, startTime, submissionReason, user, quizData, questions, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, calculateResults, calculateQuizAnalytics, generateQuestionResults, formatTime, navigate, stopComprehensiveMonitoring, exitFullScreen, tabSwitchCount]);\n\n  // Check authentication status and get user data\n  useEffect(() => {\n    const checkAuthentication = () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        const userData = localStorage.getItem('user');\n        \n        if (token && userData) {\n          const parsedUser = JSON.parse(userData);\n          setUser(parsedUser);\n          setIsAuthenticated(true);\n        } else {\n          navigate('/', { replace: true });\n        }\n      } catch (error) {\n        navigate('/', { replace: true });\n      }\n    };\n\n    checkAuthentication();\n  }, [navigate]);\n\n  // Shuffle array utility\n  const shuffleArray = useCallback((array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  }, []);\n\n  // Auto-save functionality\n  const saveProgress = useCallback(() => {\n    if (!quizData && !isActive) return;\n    \n    const progressData = {\n      currentQuestionIndex,\n      selectedAnswers,\n      reviewFlags,\n      visitedQuestions: Array.from(visitedQuestions),\n      timeSpentPerQuestion,\n      timeLeft,\n      startTime,\n      quizData,\n      questions,\n      user,\n      isActive,\n      submissionReason,\n      tabSwitchCount,\n      timestamp: Date.now(),\n      lastSaved: new Date().toISOString(),\n    };\n    \n    try {\n      localStorage.setItem('quiz-progress', JSON.stringify(progressData));\n    } catch (error) {\n      console.error('Failed to save quiz progress:', error);\n    }\n  }, [currentQuestionIndex, selectedAnswers, reviewFlags, visitedQuestions, timeSpentPerQuestion, \n      timeLeft, startTime, isActive, quizData, questions, user, submissionReason, tabSwitchCount]);\n\n  // Load saved progress\n  const loadSavedProgress = useCallback(() => {\n    try {\n      const saved = localStorage.getItem('quiz-progress');\n      if (saved) {\n        const data = JSON.parse(saved);\n        \n        const timeDiff = Date.now() - data.timestamp;\n        const isRecentSession = timeDiff < 24 * 60 * 60 * 1000;\n        \n        if (isRecentSession && data.user?.email === user?.email) {\n          const shouldRestore = window.confirm(\n            `Resume previous quiz session?\\n\\n` +\n            `Progress: ${Object.keys(data.selectedAnswers || {}).length} of ${data.questions?.length || 0} questions answered\\n` +\n            `Time remaining: ${Math.floor((data.timeLeft || 0) / 60)}:${((data.timeLeft || 0) % 60).toString().padStart(2, '0')}\\n` +\n            `Tab switch violations: ${data.tabSwitchCount || 0}`\n          );\n          \n          if (shouldRestore) {\n            setQuizData(data.quizData);\n            setQuestions(data.questions || []);\n            setCurrentQuestionIndex(data.currentQuestionIndex || 0);\n            setSelectedAnswers(data.selectedAnswers || {});\n            setReviewFlags(data.reviewFlags || {});\n            setVisitedQuestions(new Set(data.visitedQuestions || []));\n            setTimeSpentPerQuestion(data.timeSpentPerQuestion || {});\n            setTimeLeft(data.timeLeft || 0);\n            setStartTime(data.startTime);\n            setTabSwitchCount(data.tabSwitchCount || 0);\n            \n            if (data.isActive && data.timeLeft > 0) {\n              setIsActive(true);\n              setQuestionStartTime(Date.now());\n              \n              setTimeout(() => {\n                if (!isInFullscreen()) {\n                  setShowFullscreenModal(true);\n                }\n              }, 500);\n            }\n            \n            return true;\n          }\n        }\n      }\n    } catch (error) {\n      localStorage.removeItem('quiz-progress');\n    }\n    return false;\n  }, [user, isInFullscreen]);\n\n  // Load and initialize quiz data\n  useEffect(() => {\n    if (!isAuthenticated || !user) return;\n\n    const loadQuizData = async () => {\n      try {\n        const restored = loadSavedProgress();\n        if (restored) {\n          setLoading(false);\n          return;\n        }\n\n        const response = await fetch('http://localhost:5000/data/quiz-data.json');\n        if (!response.ok) throw new Error(`Failed to load quiz data: ${response.status}`);\n        \n        const data = await response.json();\n        \n        if (!data.questions || !Array.isArray(data.questions) || data.questions.length === 0) {\n          throw new Error('Invalid quiz data: No questions found');\n        }\n\n        let shuffledQuestions = data.config?.shuffleQuestions \n          ? shuffleArray(data.questions) \n          : data.questions;\n        \n        if (data.config?.shuffleOptions) {\n          shuffledQuestions = shuffledQuestions.map(question => ({\n            ...question,\n            options: shuffleArray(question.options || [])\n          }));\n        }\n        \n        setQuizData(data);\n        setQuestions(shuffledQuestions);\n        setTimeLeft(data.config?.timeLimit || 1800);\n        \n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadQuizData();\n  }, [shuffleArray, loadSavedProgress, isAuthenticated, user]);\n\n  // Auto-save every 10 seconds when active\n  useEffect(() => {\n    if (isActive || quizData) {\n      autoSaveRef.current = setInterval(saveProgress, 10000);\n      return () => clearInterval(autoSaveRef.current);\n    }\n  }, [isActive, quizData, saveProgress]);\n\n  // Save on page unload\n  useEffect(() => {\n    const handleBeforeUnload = (e) => {\n      if (isActive) {\n        saveProgress();\n        e.preventDefault();\n        e.returnValue = 'You have an active quiz session.';\n        return e.returnValue;\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [isActive, saveProgress]);\n\n  const startQuiz = useCallback(async () => {\n    try {\n      if (!user || !user.name || !user.email) {\n        alert('Authentication error. Please log in again.');\n        navigate('/', { replace: true });\n        return;\n      }\n\n      if (!isFullscreenSupported_()) {\n        const proceed = window.confirm(\n          'Fullscreen mode is not supported in your browser. ' +\n          'This may affect the quiz experience. Do you want to proceed anyway?'\n        );\n        if (!proceed) return;\n      }\n\n      const fullscreenSuccess = await enterFullScreen();\n      \n      if (!fullscreenSuccess && isFullscreenSupported_()) {\n        alert('Failed to enter fullscreen mode. Please allow fullscreen access and try again.');\n        return;\n      }\n\n      setIsActive(true);\n      const now = Date.now();\n      setStartTime(now);\n      setQuestionStartTime(now);\n      setSubmissionReason('completed');\n      setVisitedQuestions(new Set([0]));\n      setTabSwitchCount(0);\n      \n      startComprehensiveMonitoring();\n      saveProgress();\n      \n    } catch (error) {\n      console.error('Error starting quiz:', error);\n      alert('Failed to start quiz. Please try again.');\n    }\n  }, [user, saveProgress, navigate, isFullscreenSupported_, enterFullScreen, startComprehensiveMonitoring]);\n\n  // Timer functionality\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setSubmissionReason('time_expired');\n            setTimeout(() => handleSubmitQuiz(), 100);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isActive, timeLeft, handleSubmitQuiz]);\n\n  // Time tracking per question\n  useEffect(() => {\n    if (questionStartTime && questions.length > 0 && isActive) {\n      const questionId = questions[currentQuestionIndex]?.id;\n      if (questionId) {\n        const timeSpent = Date.now() - questionStartTime;\n        setTimeSpentPerQuestion(prev => ({\n          ...prev,\n          [questionId]: (prev[questionId] || 0) + Math.floor(timeSpent / 1000)\n        }));\n      }\n    }\n    setQuestionStartTime(Date.now());\n  }, [currentQuestionIndex, questions, questionStartTime, isActive]);\n\n  // Navigation functions\n  const goToQuestion = useCallback((index) => {\n    if (index >= 0 && index < questions.length) {\n      setCurrentQuestionIndex(index);\n      setVisitedQuestions(prev => new Set([...prev, index]));\n      saveProgress();\n    }\n  }, [questions.length, saveProgress]);\n\n  const nextQuestion = useCallback(() => {\n    if (currentQuestionIndex < questions.length - 1) {\n      goToQuestion(currentQuestionIndex + 1);\n    }\n  }, [currentQuestionIndex, questions.length, goToQuestion]);\n\n  const previousQuestion = useCallback(() => {\n    if (currentQuestionIndex > 0) {\n      goToQuestion(currentQuestionIndex - 1);\n    }\n  }, [currentQuestionIndex, goToQuestion]);\n\n  // Answer selection\n  const handleOptionSelect = useCallback((questionId, optionId) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: optionId\n    }));\n    \n    setVisitedQuestions(prev => new Set([...prev, currentQuestionIndex]));\n    setTimeout(saveProgress, 100);\n  }, [currentQuestionIndex, saveProgress]);\n\n  // Clear selection\n  const clearSelection = useCallback(() => {\n    const currentQuestionId = questions[currentQuestionIndex]?.id;\n    if (currentQuestionId) {\n      setSelectedAnswers(prev => {\n        const updated = { ...prev };\n        delete updated[currentQuestionId];\n        return updated;\n      });\n      saveProgress();\n    }\n  }, [questions, currentQuestionIndex, saveProgress]);\n\n  // Toggle review flag\n  const toggleReviewFlag = useCallback(() => {\n    const currentQuestionId = questions[currentQuestionIndex]?.id;\n    if (currentQuestionId) {\n      setReviewFlags(prev => ({\n        ...prev,\n        [currentQuestionId]: !prev[currentQuestionId]\n      }));\n      saveProgress();\n    }\n  }, [questions, currentQuestionIndex, saveProgress]);\n\n  // Submit confirmation\n  const confirmSubmitQuiz = useCallback(() => {\n    setShowSubmissionModal(true);\n  }, []);\n\n  // Handle modal actions\n  const handleModalCancel = useCallback(() => {\n    setShowSubmissionModal(false);\n  }, []);\n\n  const handleModalConfirm = useCallback(() => {\n    handleSubmitQuiz();\n  }, [handleSubmitQuiz]);\n\n  // Handle fullscreen modal\n  const handleFullscreenModalOk = useCallback(async () => {\n    const success = await enterFullScreen();\n    if (success || !isFullscreenSupported) {\n      setShowFullscreenModal(false);\n    }\n  }, [enterFullScreen, isFullscreenSupported]);\n\n  // Get question status\n  const getQuestionStatus = useCallback((index) => {\n    const questionId = questions[index]?.id;\n    if (!questionId) return 'not-visited';\n    \n    const isAnswered = selectedAnswers[questionId];\n    const isReviewed = reviewFlags[questionId];\n    const isVisited = visitedQuestions.has(index);\n    \n    if (isAnswered && isReviewed) return 'answered-for-review';\n    if (isAnswered) return 'answered';\n    if (isReviewed) return 'for-review';\n    if (isVisited) return 'visited';\n    return 'not-visited';\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions]);\n\n  // Calculate counts for sidebar filters\n  const answeredCount = Object.keys(selectedAnswers).length;\n  const notVisitedCount = questions.length - visitedQuestions.size;\n  const reviewedCount = Object.values(reviewFlags).filter(flag => flag).length;\n  const unansweredCount = questions.length - answeredCount;\n\n  // Filter questions based on type\n  const getQuestionsByType = useCallback((type) => {\n    return questions.map((_, index) => {\n      const questionId = questions[index]?.id;\n      if (!questionId) return false;\n      \n      const isAnswered = selectedAnswers[questionId];\n      const isReviewed = reviewFlags[questionId];\n      const isVisited = visitedQuestions.has(index);\n      \n      switch (type) {\n        case 'answered':\n          return isAnswered;\n        case 'not-visited':\n          return !isVisited;\n        case 'reviewed':\n          return isReviewed;\n        default:\n          return false;\n      }\n    }).map((match, index) => match ? index : -1).filter(index => index !== -1);\n  }, [questions, selectedAnswers, reviewFlags, visitedQuestions]);\n\n  // Navigate to first question of specific type\n  const goToQuestionType = useCallback((type) => {\n    const questionsByType = getQuestionsByType(type);\n    if (questionsByType.length > 0) {\n      goToQuestion(questionsByType[0]);\n    }\n  }, [getQuestionsByType, goToQuestion]);\n\n  useEffect(() => {\n    if (!isActive || showSubmissionModal || showFullscreenModal) return;\n\n    const handleKeyPress = (e) => {\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          previousQuestion();\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          nextQuestion();\n          break;\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n          const optionIndex = parseInt(e.key, 10) - 1;\n          const currentQuestion = questions[currentQuestionIndex];\n          if (currentQuestion?.options[optionIndex]) {\n            e.preventDefault();\n            handleOptionSelect(currentQuestion.id, currentQuestion.options[optionIndex].id);\n          }\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [isActive, showSubmissionModal, showFullscreenModal, previousQuestion, nextQuestion, questions, currentQuestionIndex, handleOptionSelect]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n      if (autoSaveRef.current) clearInterval(autoSaveRef.current);\n      stopComprehensiveMonitoring();\n    };\n  }, [stopComprehensiveMonitoring]);\n\n  if (!isAuthenticated || !user) {\n    return (\n      <div className=\"quiz-loading\">\n        <div className=\"loading-spinner\"></div>\n        <h2>Checking Authentication...</h2>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"quiz-loading\">\n        <div className=\"loading-spinner\"></div>\n        <h2>Loading Quiz...</h2>\n        <p>Please wait while we prepare your examination.</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"quiz-error\">\n        <h2>Error Loading Quiz</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()} className=\"retry-btn\">\n          Retry\n        </button>\n        <button onClick={() => navigate('/')} className=\"home-btn\">\n          Go Home\n        </button>\n      </div>\n    );\n  }\n\n  if (!quizData || !questions.length) {\n    return (\n      <div className=\"quiz-error\">\n        <h2>No Quiz Data Available</h2>\n        <button onClick={() => window.location.reload()} className=\"retry-btn\">\n          Retry\n        </button>\n        <button onClick={() => navigate('/')} className=\"home-btn\">\n          Go Home\n        </button>\n      </div>\n    );\n  }\n\n  if (!isActive && !isQuizCompleted) {\n    return (\n      <div className=\"quiz-start-screen\">\n        <div className=\"quiz-intro\">\n          <h1>Online Quiz - {quizData.config?.title || 'Assessment'}</h1>\n          <p>{quizData.config?.description || 'Complete the quiz within the time limit.'}</p>\n          \n          <div className=\"student-info\">\n            <h3>Student Information</h3>\n            <p><strong>Name:</strong> {user?.name || user?.firstName || 'Unknown'}</p>\n            <p><strong>Email:</strong> {user?.email || 'unknown@email.com'}</p>\n          </div>\n          \n          <div className=\"quiz-info\">\n            <div className=\"info-item\">\n              <span>Questions: {questions.length}</span>\n            </div>\n            <div className=\"info-item\">\n              <span>Time Limit: {formatTime(timeLeft)}</span>\n            </div>\n            <div className=\"info-item\">\n              <span>Passing Score: {quizData.config?.passingScore || 70}%</span>\n            </div>\n          </div>\n          \n          <div className=\"quiz-instructions\">\n            <h3>Instructions</h3>\n            <ul>\n              <li>Answer all questions within the time limit</li>\n              <li>You can navigate between questions using arrow keys</li>\n              <li>Use number keys 1-4 to quickly select options</li>\n              <li>Mark questions for review if needed</li>\n              <li>Your progress is automatically saved</li>\n              <li><strong>The quiz will enter fullscreen mode automatically</strong></li>\n              <li><strong>You must remain in fullscreen mode throughout the exam</strong></li>\n              <li><strong>Tab switching and window switching are monitored</strong></li>\n            </ul>\n          </div>\n          \n          <button className=\"start-quiz-btn\" onClick={startQuiz}>\n            Start Quiz\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const selectedAnswer = selectedAnswers[currentQuestion?.id];\n  const isMarkedForReview = reviewFlags[currentQuestion?.id];\n\n  return (\n    <div \n      className=\"quiz-container\" \n      style={{ width: '100vw', height: '100vh', overflow: 'hidden' }}\n    >\n      {/* Enhanced Fullscreen Warning Modal */}\n      {showFullscreenModal && (\n        <div className=\"fullscreen-modal-overlay mandatory-modal\">\n          <div className=\"fullscreen-modal enhanced-modal\">\n            <div className=\"fullscreen-modal-header\">\n              <h2>Fullscreen Mode Required</h2>\n              <div className=\"security-badge\">\n                <span>SECURITY REQUIREMENT</span>\n              </div>\n            </div>\n            \n            <div className=\"fullscreen-modal-content\">\n              <div className=\"fullscreen-warning-icon pulsing\">\n                <span>⚠️</span>\n              </div>\n              <div className=\"warning-text\">\n                <h3>Examination Security Protocol</h3>\n                <p>To maintain the integrity of this examination, you must remain in fullscreen mode.</p>\n                <p>This is a mandatory requirement and cannot be bypassed.</p>\n                \n                <div className=\"security-notice\">\n                  <h4>Security Notice:</h4>\n                  <ul>\n                    <li>Switching windows or tabs is not allowed</li>\n                    <li>Developer tools are disabled</li>\n                    <li>Right-click is disabled</li>\n                    <li>All navigation must be done within the quiz interface</li>\n                    {tabSwitchCount > 0 && (\n                      <li className=\"violation-notice\">\n                        <strong>Violations detected: {tabSwitchCount}</strong>\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                \n                {!isFullscreenSupported && (\n                  <div className=\"browser-warning\">\n                    <p><strong>Warning:</strong> Your browser may not fully support fullscreen mode. Please use a modern browser like Chrome, Firefox, or Safari for the best experience.</p>\n                    <p>Try pressing <strong>F11</strong> to enter fullscreen mode manually.</p>\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"fullscreen-modal-footer\">\n              <button \n                className=\"fullscreen-modal-btn primary-btn pulse-btn\" \n                onClick={handleFullscreenModalOk}\n              >\n                Enter Fullscreen Mode\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Submission Confirmation Modal */}\n      {showSubmissionModal && (\n        <div className=\"submission-modal-overlay\">\n          <div className=\"submission-modal\">\n            <div className=\"modal-header\">\n              <h2>Submit Quiz Confirmation</h2>\n              <div className=\"modal-warning\">\n                <span>This action cannot be undone!</span>\n              </div>\n            </div>\n            \n            <div className=\"modal-content\">\n              <div className=\"quiz-summary\">\n                <h3>Quiz Summary</h3>\n                \n                <div className=\"summary-grid\">\n                  <div className=\"summary-item\">\n                    <span className=\"summary-icon\">📝</span>\n                    <div className=\"summary-details\">\n                      <span className=\"summary-label\">Total Questions</span>\n                      <span className=\"summary-value\">{questions.length}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"summary-item answered\">\n                    <span className=\"summary-icon\">✓</span>\n                    <div className=\"summary-details\">\n                      <span className=\"summary-label\">Answered</span>\n                      <span className=\"summary-value\">{answeredCount}</span>\n                    </div>\n                  </div>\n                  \n                  {unansweredCount > 0 && (\n                    <div className=\"summary-item unanswered\">\n                      <span className=\"summary-icon\">✗</span>\n                      <div className=\"summary-details\">\n                        <span className=\"summary-label\">Unanswered</span>\n                        <span className=\"summary-value\">{unansweredCount}</span>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {reviewedCount > 0 && (\n                    <div className=\"summary-item reviewed\">\n                      <span className=\"summary-icon\">🚩</span>\n                      <div className=\"summary-details\">\n                        <span className=\"summary-label\">Marked for Review</span>\n                        <span className=\"summary-value\">{reviewedCount}</span>\n                      </div>\n                    </div>\n                  )}\n                  \n                  <div className=\"summary-item time\">\n                    <span className=\"summary-icon\">⏰</span>\n                    <div className=\"summary-details\">\n                      <span className=\"summary-label\">Time Remaining</span>\n                      <span className=\"summary-value\">{formatTime(timeLeft)}</span>\n                    </div>\n                  </div>\n\n                  {tabSwitchCount > 0 && (\n                    <div className=\"summary-item violations\">\n                      <span className=\"summary-icon\">⚠️</span>\n                      <div className=\"summary-details\">\n                        <span className=\"summary-label\">Tab Switch Violations</span>\n                        <span className=\"summary-value\">{tabSwitchCount}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                {unansweredCount > 0 && (\n                  <div className=\"warning-message\">\n                    <p>\n                      You have <strong>{unansweredCount}</strong> unanswered question{unansweredCount > 1 ? 's' : ''}. \n                      These will be marked as incorrect.\n                    </p>\n                  </div>\n                )}\n                \n                <div className=\"completion-rate\">\n                  <span className=\"completion-label\">Completion Rate:</span>\n                  <div className=\"completion-bar\">\n                    <div \n                      className=\"completion-fill\" \n                      style={{ width: `${(answeredCount / questions.length) * 100}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"completion-percentage\">\n                    {Math.round((answeredCount / questions.length) * 100)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"modal-footer\">\n              <button \n                className=\"modal-btn cancel-btn\" \n                onClick={handleModalCancel}\n              >\n                Continue Quiz\n              </button>\n              \n              <button \n                className=\"modal-btn confirm-btn\" \n                onClick={handleModalConfirm}\n              >\n                Submit Final Answers\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"quiz-sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>Questions</h3>\n          <p>{currentQuestionIndex + 1} of {questions.length}</p>\n        </div>\n        \n        <div className=\"sidebar-filters\">\n          <button \n            className=\"filter-btn answered\" \n            onClick={() => goToQuestionType('answered')}\n            disabled={answeredCount === 0}\n          >\n            Answered: {answeredCount}\n          </button>\n          <button \n            className=\"filter-btn not-visited\" \n            onClick={() => goToQuestionType('not-visited')}\n            disabled={notVisitedCount === 0}\n          >\n            Not Visited: {notVisitedCount}\n          </button>\n          <button \n            className=\"filter-btn reviewed\" \n            onClick={() => goToQuestionType('reviewed')}\n            disabled={reviewedCount === 0}\n          >\n            Reviewed: {reviewedCount}\n          </button>\n        </div>\n        \n        <div className=\"questions-grid\">\n          {questions.map((_, index) => {\n            const status = getQuestionStatus(index);\n            const isCurrent = index === currentQuestionIndex;\n            \n            return (\n              <button\n                key={index}\n                className={`question-btn ${status} ${isCurrent ? 'current' : ''}`}\n                onClick={() => goToQuestion(index)}\n              >\n                {index + 1}\n              </button>\n            );\n          })}\n        </div>\n\n        <div className=\"progress-summary\">\n          <p>Answered: {Object.keys(selectedAnswers).length}</p>\n          <p>Remaining: {questions.length - Object.keys(selectedAnswers).length}</p>\n          {tabSwitchCount > 0 && (\n            <p className=\"violations-count\">Violations: {tabSwitchCount}</p>\n          )}\n        </div>\n\n        <button className=\"submit-quiz-btn\" onClick={confirmSubmitQuiz}>\n          Submit Quiz\n        </button>\n      </div>\n\n      <div className=\"quiz-main\">\n        <div className=\"quiz-header\">\n          <div className=\"user-info-header\">\n            <div className=\"user-name\">\n              <span className=\"user-icon\">👤</span>\n              <span className=\"name-text\">{user?.name || user?.firstName || 'Student'}</span>\n            </div>\n            {/* **IMPROVED: Minimal fullscreen button with symbol** */}\n            <button \n              className=\"fullscreen-toggle-btn minimal\"\n              onClick={enterFullScreen}\n              title=\"Enter Fullscreen Mode\"\n              aria-label=\"Enter Fullscreen Mode\"\n            >\n              ⛶\n            </button>\n          </div>\n          \n          <div className=\"question-progress\">\n            <h2>Question {currentQuestionIndex + 1} of {questions.length}</h2>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n              />\n            </div>\n          </div>\n          \n          <div className=\"timer-display\">\n            <span className=\"timer-text\">{formatTime(timeLeft)}</span>\n            <span className=\"timer-label\">Time Remaining</span>\n          </div>\n        </div>\n\n        <div className=\"question-content\">\n          <div className=\"question-text\">\n            <h3>{currentQuestion?.text}</h3>\n          </div>\n\n          <div className=\"options-container\">\n            {currentQuestion?.options?.map((option, index) => {\n              const isSelected = selectedAnswer === option.id;\n              const prefix = String.fromCharCode(65 + index);\n              \n              return (\n                <div\n                  key={option.id}\n                  className={`option-item ${isSelected ? 'selected' : ''}`}\n                  onClick={() => handleOptionSelect(currentQuestion.id, option.id)}\n                >\n                  <div className=\"option-prefix\">\n                    <span className=\"option-letter\">{prefix}</span>\n                    <span className=\"option-key\">{index + 1}</span>\n                  </div>\n                  <div className=\"option-content\">\n                    <span className=\"option-text\">{option.text}</span>\n                    <input\n                      type=\"radio\"\n                      name={`question-${currentQuestion.id}`}\n                      value={option.id}\n                      checked={isSelected}\n                      onChange={() => handleOptionSelect(currentQuestion.id, option.id)}\n                      className=\"option-radio\"\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"quiz-navigation\">\n          <div className=\"nav-left\">\n            <button \n              className=\"nav-btn\"\n              onClick={previousQuestion}\n              disabled={currentQuestionIndex === 0}\n            >\n              ← Previous\n            </button>\n          </div>\n\n          <div className=\"nav-center\">\n            <button \n              className=\"nav-btn clear-btn\"\n              onClick={clearSelection}\n              disabled={!selectedAnswer}\n            >\n              Clear\n            </button>\n            \n            <button \n              className={`nav-btn ${isMarkedForReview ? 'review-active' : ''}`}\n              onClick={toggleReviewFlag}\n            >\n              {isMarkedForReview ? 'Marked' : 'Mark for Review'}\n            </button>\n          </div>\n\n          <div className=\"nav-right\">\n            <button \n              className=\"nav-btn\"\n              onClick={nextQuestion}\n              disabled={currentQuestionIndex === questions.length - 1}\n            >\n              Next →\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}